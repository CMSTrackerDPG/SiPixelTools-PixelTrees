[CRAB]

jobtype = cmssw
#scheduler = glite
scheduler = caf
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = bari

[CMSSW]

### The data you want to access (to be found on DBS)
## runs with 0T
#runselection=69557,69559,69564,69572,69573,69587,69594,69728,69743,70147,70170,70195,70410,70411,70412,70413,70414,70415,70416,70417,70421,70454,70664,70674,70675
## runs with 3.8T, see https://twiki.cern.ch/twiki/bin/view/CMS/GRReprocessing
runselection=66550,66555,66565,66569,66588,66594,66604,66612,66613,66615,66621,66627,66637,66644,66656,66657,66662,66668,66676,66692,66703,66706,66709,66711,66714,66716,66720,66722,66732,66733,66739,66740,66746,66748,66752,66756,66757,66783,66878,66887,67114,67122,67124,67126,67128,67139,67141,67145,67147,67173,67214,67217,67219,67225,67234,67489,67527,67529,67531,67534,67538,67539,67541,67544,67547,67548,67557,67573,67644,67645,67647,67781,67790,67800,67810,67818,67838,67977,68000,68021,68087,68094,68100,68124,68129,68141,68264,68273,68276,68279,68286,68288,68483,68500,68665,68904,68926,68949,68958,69044,69046,69071,69080,69109,69165,69207,69240,69243,69246,69247,69249,69250,69251,69253,69256,69261,69269,69272,69273,69276,69310,69330,69332,69333,69335,69343,69351,69357,69364,69365,69382,69396,69438,69464,69473,69482,69522,69743,69750,69788,69797,69800,69850,69874,69892,69902,69912,69980,69987,69997,70036

# available in crab 250preX and later
split_by_run=1

#datasetpath=/Cosmics/Commissioning08_CRAFT_V3P_SuperPointing_v3/RECO
#datasetpath=/Cosmics/Commissioning08_CRAFT_V3P_SuperPointing_v4/RECO
#datasetpath=/Cosmics/Commissioning08_CRAFT_ALL_V4_StreamALCARECOTkAlCosmics0T_step3_AlcaReco-v2/ALCARECO
datasetpath=/Cosmics/Commissioning08_CRAFT_ALL_V9_SuperPointing_225-v3/RAW-RECO

#datasetpath=/TkAlCosmics4T/Summer08_COSMMC_21X_V1_v1/RECO
### The ParameterSet you want to use
pset=pixelNtuplizer_RealData_cfg38T.py

### Splitting parameters
total_number_of_events=-1
#total_number_of_events=100
#events_per_job = 1000
number_of_jobs = 200

### The output files (comma separated list)
output_file = SuperPointing_test_threealgos.root

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 1

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 0

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
storage_element=srm-cms.cern.ch
### this directory is the mountpoint of SE 
storage_pool=None
storage_path=/castor/cern.ch
### directory or tree of directory under the mounpoint 
user_remote_dir=/user/X/XNAME/


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[EDG]

## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
#se_black_list = T0,T1
#se_white_list =

## By ComputingElement
#ce_black_list = ucsd.edu
#ce_white_list = ihepa.ufl.edu

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

